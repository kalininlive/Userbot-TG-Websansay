#!/bin/bash
# –ú–∞—Å—Ç–µ—Ä –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –Ω–æ–≤–æ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞ Telegram –∫ –∑–∞–ø—É—â–µ–Ω–Ω–æ–º—É API-—Å–µ—Ä–≤–µ—Ä—É

set -e

# --- –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –∫—Ä–∞—Å–∏–≤–æ–≥–æ –≤—ã–≤–æ–¥–∞ ---
log() { echo -e "\033[1;36m[WIZARD]\033[0m $1"; }
info() { echo -e "\033[1;32m[INFO]\033[0m $1"; }
warn() { echo -e "\033[1;33m[–ü–†–ï–î–£–ü–†–ï–ñ–î–ï–ù–ò–ï]\033[0m $1"; }
error() { echo -e "\033[1;31m[–û–®–ò–ë–ö–ê]\033[0m $1" >&2; exit 1; }

# --- –ü—Ä–æ–≤–µ—Ä–∫–∏ ---
for cmd in curl jq qrencode; do
  command -v $cmd >/dev/null || error "–ù–µ–æ–±—Ö–æ–¥–∏–º–∞ —É—Ç–∏–ª–∏—Ç–∞ '$cmd'. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –µ–µ (apt install $cmd)."
done

APP_DIR="/opt/tgapi"
ENV_FILE="$APP_DIR/.env"

if [ ! -f "$ENV_FILE" ]; then
  error "–§–∞–π–ª –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ $ENV_FILE –Ω–µ –Ω–∞–π–¥–µ–Ω. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Å–µ—Ä–≤–µ—Ä —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω."
fi

# --- –ß—Ç–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ ---
API_PORT=$(grep -E '^API_PORT=' "$ENV_FILE" | cut -d= -f2)
API_TOKEN=$(grep -E '^API_TOKEN=' "$ENV_FILE" | cut -d= -f2)
API_URL="http://127.0.0.1:$API_PORT"

if [ -z "$API_TOKEN" ]; then
  error "API_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ $ENV_FILE."
fi

# --- –ú–∞—Å—Ç–µ—Ä –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è ---
info "–ó–∞–ø—É—Å–∫ –º–∞—Å—Ç–µ—Ä–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∞–∫–∫–∞—É–Ω—Ç–∞ Telegram."
echo "----------------------------------------------------"

local API_ID API_HASH NAME

read -r -p "–í–≤–µ–¥–∏—Ç–µ –≤–∞—à api_id: " API_ID
while ! [[ "$API_ID" =~ ^[0-9]+$ ]]; do
  warn "api_id –¥–æ–ª–∂–µ–Ω —Å–æ—Å—Ç–æ—è—Ç—å —Ç–æ–ª—å–∫–æ –∏–∑ —Ü–∏—Ñ—Ä."
  read -r -p "–í–≤–µ–¥–∏—Ç–µ –≤–∞—à api_id: " API_ID
done

read -r -p "–í–≤–µ–¥–∏—Ç–µ –≤–∞—à api_hash: " API_HASH
read -r -p "–í–≤–µ–¥–∏—Ç–µ –∏–º—è –¥–ª—è —ç—Ç–æ–π —Å–µ—Å—Å–∏–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, second_account): " NAME
NAME=$(echo "$NAME" | tr -d '[:space:]') # –£–¥–∞–ª—è–µ–º –ø—Ä–æ–±–µ–ª—ã

log "–ó–∞–ø—Ä–æ—Å –Ω–∞ —Å–æ–∑–¥–∞–Ω–∏–µ QR-–∫–æ–¥–∞ –¥–ª—è —Å–µ—Å—Å–∏–∏ '$NAME'..."

local resp
resp=$(curl -s -X POST "$API_URL/auth/qr/start" \
  -H "Authorization: Bearer $API_TOKEN" \
  -H "Content-Type: application/json" \
  -d "{\"name\":\"$NAME\",\"apiId\":$API_ID,\"apiHash\":\"$API_HASH\"}")

local ok
ok=$(echo "$resp" | jq -r '.ok // false')
if [ "$ok" != "true" ]; then
  error "–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–æ—Ü–µ—Å—Å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏. –û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞: $resp"
fi

clear
printf '\033[?25l' # –°–∫—Ä—ã—Ç—å –∫—É—Ä—Å–æ—Ä
trap 'printf "\\033[?25h\\n"; exit 0' INT TERM # –ü–æ–∫–∞–∑–∞—Ç—å –∫—É—Ä—Å–æ—Ä –ø—Ä–∏ –≤—ã—Ö–æ–¥–µ

local prev_url=""

for _ in $(seq 1 120); do # –¢–∞–π–º–∞—É—Ç ~10 –º–∏–Ω—É—Ç (120 * 5s)
  local json status url
  json=$(curl -s -G "$API_URL/auth/qr/status" \
    -H "Authorization: Bearer $API_TOKEN" \
    --data-urlencode "name=$NAME")
  
  status=$(echo "$json" | jq -r '.status // "unknown"')
  url=$(echo "$json" | jq -r '.qr // .login_url // empty')

  printf '\033[H' # –ü–µ—Ä–µ–º–µ—Å—Ç–∏—Ç—å –∫—É—Ä—Å–æ—Ä –≤ –Ω–∞—á–∞–ª–æ
  echo "----------------------------------------------------"
  echo "  –ú–∞—Å—Ç–µ—Ä –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è Telegram Userbot"
  echo "----------------------------------------------------"
  echo "  –°–µ—Å—Å–∏—è: $NAME"
  echo "  –°—Ç–∞—Ç—É—Å: $status"
  echo "  –í—Ä–µ–º—è:  $(date '+%Y-%m-%d %H:%M:%S')"
  echo "----------------------------------------------------"
  echo

  if [ "$status" = "authorized" ]; then
    local user_info
    user_info=$(echo "$json" | jq -r '.user.firstName // "N/A"')
    info "‚úÖ –£—Å–ø–µ—à–Ω–æ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–æ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: $user_info"
    printf '\033[?25h\n' # –ü–æ–∫–∞–∑–∞—Ç—å –∫—É—Ä—Å–æ—Ä
    exit 0
  fi

  if [ "$status" = "error" ]; then
    local err_msg
    err_msg=$(echo "$json" | jq -r '.error // "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞"')
    error "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: $err_msg"
  fi

  if [ -n "$url" ] && [ "$url" != "null" ]; then
    if [ "$url" != "$prev_url" ]; then
      echo "üîÑ –û—Ç—Å–∫–∞–Ω–∏—Ä—É–π—Ç–µ QR-–∫–æ–¥ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ Telegram:"
      echo "   (–ù–∞—Å—Ç—Ä–æ–π–∫–∏ ‚Üí –£—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ ‚Üí –ü—Ä–∏–≤—è–∑–∞—Ç—å —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ)"
      echo
      qrencode -t ANSIUTF8 "$url"
      prev_url="$url"
    else
      echo "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è QR-–∫–æ–¥–∞..."
    fi
  else
    echo "‚è≥ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è QR-–∫–æ–¥–∞, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ..."
  fi

  sleep 5
done

error "–¢–∞–π–º–∞—É—Ç –æ–∂–∏–¥–∞–Ω–∏—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–ø—É—Å—Ç–∏—Ç—å —Å–∫—Ä–∏–ø—Ç —Å–Ω–æ–≤–∞."
