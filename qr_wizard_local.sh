#!/usr/bin/env bash
# –õ—ë–≥–∫–∏–π –ª–æ–∫–∞–ª—å–Ω—ã–π QR‚Äë–≤–∏–∑–∞—Ä–¥ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å API —Å–µ—Ä–≤–µ—Ä–∞.
# –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –æ–ø—Ä–∞—à–∏–≤–∞–µ—Ç —ç–Ω–¥–ø–æ–∏–Ω—Ç `/auth/qr/start` –∏ `/auth/qr/status`
# –∏ –≤—ã–≤–æ–¥–∏—Ç QR-–∫–æ–¥ –ø—Ä—è–º–æ –≤ —Ç–µ—Ä–º–∏–Ω–∞–ª, –ø–µ—Ä–µ—Ä–∏—Å–æ–≤—ã–≤–∞—è –µ–≥–æ –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏.
#
# –î–ª—è –∑–∞–ø—É—Å–∫–∞:
#   sudo bash ./qr_wizard_local.sh
#
# –°–∫—Ä–∏–ø—Ç –ø—Ä–∏–Ω–∏–º–∞–µ—Ç:
#   - api_id (—á–∏—Å–ª–æ–≤–æ–π id –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è Telegram)
#   - api_hash (hash –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è)
#   - name (—É–Ω–∏–∫–∞–ª—å–Ω–æ–µ –∏–º—è —Å–µ—Å—Å–∏–∏)
#
# –¢—Ä–µ–±–æ–≤–∞–Ω–∏—è: —É—Ç–∏–ª–∏—Ç—ã `curl`, `jq` –∏ `qrencode`.

set -euo pipefail

API="${API:-http://127.0.0.1:3000}"

# –ü–æ–ø—ã—Ç–∞—Ç—å—Å—è –ø—Ä–æ—á–∏—Ç–∞—Ç—å —Ç–æ–∫–µ–Ω –∏–∑ .env, –µ—Å–ª–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è TOKEN –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞
if [ -z "${TOKEN:-}" ]; then
  if [ -f /opt/tgapi/.env ]; then
    TOKEN="$(grep -E '^API_TOKEN=' /opt/tgapi/.env | cut -d= -f2- || true)"
  else
    TOKEN=""
  fi
fi

read -r -p "–í–≤–µ–¥–∏—Ç–µ api_id: " API_ID
read -r -p "–í–≤–µ–¥–∏—Ç–µ api_hash: " API_HASH
read -r -p "–í–≤–µ–¥–∏—Ç–µ name (–∏–º—è –∞–∫–∫–∞—É–Ω—Ç–∞): " NAME

command -v jq >/dev/null || { echo "jq –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"; exit 1; }
command -v qrencode >/dev/null || { echo "qrencode –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"; exit 1; }

# –ó–∞–ø—É—Å–∫ –ø—Ä–æ—Ü–µ—Å—Å–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
if ! resp="$(curl -fsS -X POST "$API/auth/qr/start" -H "Authorization: Bearer $TOKEN" -H "Content-Type: application/json" -d "{\"name\":\"$NAME\",\"apiId\":$API_ID,\"apiHash\":\"$API_HASH\"}" 2>&1)"; then
  echo "–ù–µ —É–¥–∞–ª–æ—Å—å –∏–Ω–∏—Ü–∏–∏—Ä–æ–≤–∞—Ç—å QR-–∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é: $resp"
  exit 1
fi

if ! printf '%s' "$resp" | jq empty >/dev/null 2>&1; then
  echo "–°–µ—Ä–≤–µ—Ä –≤–µ—Ä–Ω—É–ª –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –æ—Ç–≤–µ—Ç –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: $resp"
  exit 1
fi

if ! ok="$(printf '%s' "$resp" | jq -r '.ok // false' 2>/dev/null)"; then
  echo "–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –æ—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞ –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: $resp"
  exit 1
fi

if [ "$ok" != "true" ]; then
  echo "–û—à–∏–±–∫–∞ —Å—Ç–∞—Ä—Ç–∞: $resp"
  exit 1
fi

clear; printf '\033[?25l'
trap 'printf "\033[?25h\n"; exit 0' INT TERM

render_header() {
  local status="$1"
  printf '\033[H'
  echo "API: $API"
  echo "NAME: $NAME"
  echo "TIME: $(date '+%Y-%m-%d %H:%M:%S')"
  echo "STAT: $status"
  echo
}

prev=""; last=0; interval=15
while true; do
  if ! json="$(curl -fsS -G "$API/auth/qr/status" -H "Authorization: Bearer $TOKEN" --data-urlencode "name=$NAME" 2>&1)"; then
    render_header "network-error"
    echo "‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç—É—Å QR: $json"
    sleep 5
    continue
  fi

  if ! printf '%s' "$json" | jq empty >/dev/null 2>&1; then
    render_header "invalid-response"
    echo "‚ö†Ô∏è –°–µ—Ä–≤–µ—Ä –≤–µ—Ä–Ω—É–ª –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π JSON: $json"
    sleep 5
    continue
  fi

  status="$(printf '%s' "$json" | jq -r '.status // "unknown"')"
  url="$(printf '%s' "$json" | jq -r '.qr // .login_url // empty')"

  render_header "$status"

  if [ "$status" = "authorized" ]; then
    echo "‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–æ."
    printf '\033[?25h\n'
    echo
    echo "‚Äî /me:"
    curl -s -G "$API/me" -H "Authorization: Bearer $TOKEN" --data-urlencode "name=$NAME" | jq .
    break
  fi

  if [ "$status" = "error" ]; then
    echo "‚õî $(printf '%s' "$json" | jq -r '.error // "error"')"
    break
  fi

  now="$(date +%s)"
  if [ -n "$url" ] && [ "$url" != "null" ]; then
    if [ "$url" != "$prev" ] && [ $((now - last)) -ge $interval ]; then
      echo "üîÑ –°–∫–∞–Ω–∏—Ä—É–π QR –≤ Telegram (–ù–∞—Å—Ç—Ä–æ–π–∫–∏ ‚Üí –£—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ ‚Üí –ü—Ä–∏–≤—è–∑–∞—Ç—å —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ):"
      echo "$url" | qrencode -t ANSIUTF8
      prev="$url"; last="$now"
    else
      echo "‚åõ –ñ–¥—ë–º —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è‚Ä¶"
    fi
  else
    echo "‚Ä¶ –ñ–¥—ë–º –ø–æ—è–≤–ª–µ–Ω–∏—è QR‚Äë—Ç–æ–∫–µ–Ω–∞"
  fi

  sleep 5
done

printf '\033[?25h\n'
exit 0

